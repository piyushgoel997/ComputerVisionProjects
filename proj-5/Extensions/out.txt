tf.Tensor(
[[-5.6526756e-01  6.0755827e-17  5.6526756e-01]
 [-5.6970102e-01  6.1232343e-17  5.6970102e-01]
 [-5.6526756e-01  6.0755827e-17  5.6526756e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-6.4183843e-01 -1.2121242e-01  4.5981041e-01]
 [-5.6069291e-01  6.1232343e-17  5.6069291e-01]
 [-4.5981041e-01  1.2121242e-01  6.4183843e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-6.9218397e-01 -2.3547406e-01  3.2611090e-01]
 [-5.3338838e-01  6.1232343e-17  5.3338838e-01]
 [-3.2611090e-01  2.3547406e-01  6.9218397e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-7.2021389e-01 -3.3692095e-01  1.6950892e-01]
 [-4.8714474e-01  6.1232343e-17  4.8714474e-01]
 [-1.6950892e-01  3.3692095e-01  7.2021389e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-7.291490e-01 -4.215020e-01  6.028302e-17]
 [-4.215020e-01  6.123234e-17  4.215020e-01]
 [ 6.028302e-17  4.215020e-01  7.291490e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-7.2021389e-01 -4.8714474e-01 -1.6950892e-01]
 [-3.3692095e-01  6.1232343e-17  3.3692095e-01]
 [ 1.6950892e-01  4.8714474e-01  7.2021389e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-6.9218397e-01 -5.3338838e-01 -3.2611090e-01]
 [-2.3547406e-01  6.1232343e-17  2.3547406e-01]
 [ 3.2611090e-01  5.3338838e-01  6.9218397e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-6.4183843e-01 -5.6069291e-01 -4.5981041e-01]
 [-1.2121242e-01  6.1232343e-17  1.2121242e-01]
 [ 4.5981041e-01  5.6069291e-01  6.4183843e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-5.6526756e-01 -5.6970102e-01 -5.6526756e-01]
 [ 6.0755827e-17  6.1232343e-17  6.0755827e-17]
 [ 5.6526756e-01  5.6970102e-01  5.6526756e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-4.5981041e-01 -5.6069291e-01 -6.4183843e-01]
 [ 1.2121242e-01  6.1232343e-17 -1.2121242e-01]
 [ 6.4183843e-01  5.6069291e-01  4.5981041e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-3.2611090e-01 -5.3338838e-01 -6.9218397e-01]
 [ 2.3547406e-01  6.1232343e-17 -2.3547406e-01]
 [ 6.9218397e-01  5.3338838e-01  3.2611090e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-1.6950892e-01 -4.8714474e-01 -7.2021389e-01]
 [ 3.3692095e-01  6.1232343e-17 -3.3692095e-01]
 [ 7.2021389e-01  4.8714474e-01  1.6950892e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 6.028302e-17 -4.215020e-01 -7.291490e-01]
 [ 4.215020e-01  6.123234e-17 -4.215020e-01]
 [ 7.291490e-01  4.215020e-01  6.028302e-17]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 1.6950892e-01 -3.3692095e-01 -7.2021389e-01]
 [ 4.8714474e-01  6.1232343e-17 -4.8714474e-01]
 [ 7.2021389e-01  3.3692095e-01 -1.6950892e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 3.2611090e-01 -2.3547406e-01 -6.9218397e-01]
 [ 5.3338838e-01  6.1232343e-17 -5.3338838e-01]
 [ 6.9218397e-01  2.3547406e-01 -3.2611090e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 4.5981041e-01 -1.2121242e-01 -6.4183843e-01]
 [ 5.6069291e-01  6.1232343e-17 -5.6069291e-01]
 [ 6.4183843e-01  1.2121242e-01 -4.5981041e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 5.6526756e-01  6.0755827e-17 -5.6526756e-01]
 [ 5.6970102e-01  6.1232343e-17 -5.6970102e-01]
 [ 5.6526756e-01  6.0755827e-17 -5.6526756e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 6.4183843e-01  1.2121242e-01 -4.5981041e-01]
 [ 5.6069291e-01  6.1232343e-17 -5.6069291e-01]
 [ 4.5981041e-01 -1.2121242e-01 -6.4183843e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 6.9218397e-01  2.3547406e-01 -3.2611090e-01]
 [ 5.3338838e-01  6.1232343e-17 -5.3338838e-01]
 [ 3.2611090e-01 -2.3547406e-01 -6.9218397e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 7.2021389e-01  3.3692095e-01 -1.6950892e-01]
 [ 4.8714474e-01  6.1232343e-17 -4.8714474e-01]
 [ 1.6950892e-01 -3.3692095e-01 -7.2021389e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 7.2914898e-01  4.2150199e-01 -1.5831910e-16]
 [ 4.2150199e-01  6.1232343e-17 -4.2150199e-01]
 [ 2.7888515e-16 -4.2150199e-01 -7.2914898e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 7.2021389e-01  4.8714474e-01  1.6950892e-01]
 [ 3.3692095e-01  6.1232343e-17 -3.3692095e-01]
 [-1.6950892e-01 -4.8714474e-01 -7.2021389e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 6.9218397e-01  5.3338838e-01  3.2611090e-01]
 [ 2.3547406e-01  6.1232343e-17 -2.3547406e-01]
 [-3.2611090e-01 -5.3338838e-01 -6.9218397e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 6.4183843e-01  5.6069291e-01  4.5981041e-01]
 [ 1.2121242e-01  6.1232343e-17 -1.2121242e-01]
 [-4.5981041e-01 -5.6069291e-01 -6.4183843e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 5.6526756e-01  5.6970102e-01  5.6526756e-01]
 [ 2.8107248e-16  6.1232343e-17 -1.5956081e-16]
 [-5.6526756e-01 -5.6970102e-01 -5.6526756e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 4.5981041e-01  5.6069291e-01  6.4183843e-01]
 [-1.2121242e-01  6.1232343e-17  1.2121242e-01]
 [-6.4183843e-01 -5.6069291e-01 -4.5981041e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 3.2611090e-01  5.3338838e-01  6.9218397e-01]
 [-2.3547406e-01  6.1232343e-17  2.3547406e-01]
 [-6.9218397e-01 -5.3338838e-01 -3.2611090e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 1.6950892e-01  4.8714474e-01  7.2021389e-01]
 [-3.3692095e-01  6.1232343e-17  3.3692095e-01]
 [-7.2021389e-01 -4.8714474e-01 -1.6950892e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[ 2.7888515e-16  4.2150199e-01  7.2914898e-01]
 [-4.2150199e-01  6.1232343e-17  4.2150199e-01]
 [-7.2914898e-01 -4.2150199e-01 -1.5831910e-16]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-1.6950892e-01  3.3692095e-01  7.2021389e-01]
 [-4.8714474e-01  6.1232343e-17  4.8714474e-01]
 [-7.2021389e-01 -3.3692095e-01  1.6950892e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-3.2611090e-01  2.3547406e-01  6.9218397e-01]
 [-5.3338838e-01  6.1232343e-17  5.3338838e-01]
 [-6.9218397e-01 -2.3547406e-01  3.2611090e-01]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[-4.5981041e-01  1.2121242e-01  6.4183843e-01]
 [-5.6069291e-01  6.1232343e-17  5.6069291e-01]
 [-6.4183843e-01 -1.2121242e-01  4.5981041e-01]], shape=(3, 3), dtype=float32)
10/10 [==============================] - 0s 11ms/sample - loss: 0.0042 - accuracy: 1.0000
The predicted digit is 0 with the class probabilities [0.99, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 0
The predicted digit is 1 with the class probabilities [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 1
The predicted digit is 2 with the class probabilities [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 2
The predicted digit is 3 with the class probabilities [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 3
The predicted digit is 4 with the class probabilities [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 4
The predicted digit is 5 with the class probabilities [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 5
The predicted digit is 6 with the class probabilities [0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.98, 0.0, 0.02, 0.0] and the correct digit 6
The predicted digit is 7 with the class probabilities [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0] and the correct digit 7
The predicted digit is 8 with the class probabilities [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0] and the correct digit 8
The predicted digit is 9 with the class probabilities [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.99] and the correct digit 9
tf.Tensor(
[[0.02679927 0.02679927 0.02679927]
 [0.9464015  0.9464015  0.9464015 ]
 [0.02679927 0.02679927 0.02679927]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.26746684 0.26746684 0.26746684]
 [0.4650663  0.4650663  0.4650663 ]
 [0.26746684 0.26746684 0.26746684]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.22014189 0.22014189 0.22014189]
 [0.5597162  0.5597162  0.5597162 ]
 [0.22014189 0.22014189 0.22014189]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.16568743 0.16568743 0.16568743]
 [0.6686251  0.6686251  0.6686251 ]
 [0.16568743 0.16568743 0.16568743]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[1.2001917e-09 1.2001917e-09 1.2001917e-09]
 [1.0000000e+00 1.0000000e+00 1.0000000e+00]
 [1.2001917e-09 1.2001917e-09 1.2001917e-09]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[1.1925916e-09 1.1925916e-09 1.1925916e-09]
 [1.0000000e+00 1.0000000e+00 1.0000000e+00]
 [1.1925916e-09 1.1925916e-09 1.1925916e-09]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0. 0. 0.]
 [1. 1. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.25333887 0.25333887 0.25333887]
 [0.49332225 0.49332225 0.49332225]
 [0.25333887 0.25333887 0.25333887]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.16695048 0.16695048 0.16695048]
 [0.6660991  0.6660991  0.6660991 ]
 [0.16695048 0.16695048 0.16695048]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.21227449 0.21227449 0.21227449]
 [0.575451   0.575451   0.575451  ]
 [0.21227449 0.21227449 0.21227449]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0. 0. 0.]
 [1. 1. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.27016142 0.27016142 0.27016142]
 [0.4596772  0.4596772  0.4596772 ]
 [0.27016142 0.27016142 0.27016142]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.24645093 0.24645093 0.24645093]
 [0.50709814 0.50709814 0.50709814]
 [0.24645093 0.24645093 0.24645093]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[1.5272133e-05 1.5272133e-05 1.5272133e-05]
 [9.9996948e-01 9.9996948e-01 9.9996948e-01]
 [1.5272133e-05 1.5272133e-05 1.5272133e-05]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[2.7026263e-07 2.7026263e-07 2.7026263e-07]
 [9.9999946e-01 9.9999946e-01 9.9999946e-01]
 [2.7026263e-07 2.7026263e-07 2.7026263e-07]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[3.5029518e-07 3.5029518e-07 3.5029518e-07]
 [9.9999928e-01 9.9999928e-01 9.9999928e-01]
 [3.5029518e-07 3.5029518e-07 3.5029518e-07]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.00446858 0.00446858 0.00446858]
 [0.9910628  0.9910628  0.9910628 ]
 [0.00446858 0.00446858 0.00446858]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.12276502 0.12276502 0.12276502]
 [0.75447    0.75447    0.75447   ]
 [0.12276502 0.12276502 0.12276502]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.06030222 0.06030222 0.06030222]
 [0.87939554 0.87939554 0.87939554]
 [0.06030222 0.06030222 0.06030222]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.00273749 0.00273749 0.00273749]
 [0.994525   0.994525   0.994525  ]
 [0.00273749 0.00273749 0.00273749]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.1723463 0.1723463 0.1723463]
 [0.6553074 0.6553074 0.6553074]
 [0.1723463 0.1723463 0.1723463]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[6.926529e-12 6.926529e-12 6.926529e-12]
 [1.000000e+00 1.000000e+00 1.000000e+00]
 [6.926529e-12 6.926529e-12 6.926529e-12]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.00283978 0.00283978 0.00283978]
 [0.99432045 0.99432045 0.99432045]
 [0.00283978 0.00283978 0.00283978]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.02299934 0.02299934 0.02299934]
 [0.9540013  0.9540013  0.9540013 ]
 [0.02299934 0.02299934 0.02299934]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.07653641 0.07653641 0.07653641]
 [0.84692717 0.84692717 0.84692717]
 [0.07653641 0.07653641 0.07653641]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.2352819  0.2352819  0.2352819 ]
 [0.52943623 0.52943623 0.52943623]
 [0.2352819  0.2352819  0.2352819 ]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[3.5773639e-06 3.5773639e-06 3.5773639e-06]
 [9.9999285e-01 9.9999285e-01 9.9999285e-01]
 [3.5773639e-06 3.5773639e-06 3.5773639e-06]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.1159457 0.1159457 0.1159457]
 [0.7681086 0.7681086 0.7681086]
 [0.1159457 0.1159457 0.1159457]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.16242878 0.16242878 0.16242878]
 [0.6751424  0.6751424  0.6751424 ]
 [0.16242878 0.16242878 0.16242878]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0. 0. 0.]
 [1. 1. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[0.17020588 0.17020588 0.17020588]
 [0.6595882  0.6595882  0.6595882 ]
 [0.17020588 0.17020588 0.17020588]], shape=(3, 3), dtype=float32)
tf.Tensor(
[[3.4070005e-08 3.4070005e-08 3.4070005e-08]
 [9.9999994e-01 9.9999994e-01 9.9999994e-01]
 [3.4070005e-08 3.4070005e-08 3.4070005e-08]], shape=(3, 3), dtype=float32)
10/10 [==============================] - 0s 11ms/sample - loss: 0.8244 - accuracy: 0.9000
The predicted digit is 0 with the class probabilities [0.94, 0.0, 0.03, 0.0, 0.0, 0.0, 0.03, 0.0, 0.0, 0.0] and the correct digit 0
The predicted digit is 1 with the class probabilities [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 1
The predicted digit is 2 with the class probabilities [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 2
The predicted digit is 3 with the class probabilities [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 3
The predicted digit is 4 with the class probabilities [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 4
The predicted digit is 5 with the class probabilities [0.0, 0.0, 0.0, 0.02, 0.0, 0.82, 0.0, 0.0, 0.0, 0.16] and the correct digit 5
The predicted digit is 6 with the class probabilities [0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.95, 0.0, 0.0, 0.0] and the correct digit 6
The predicted digit is 3 with the class probabilities [0.0, 0.0, 0.03, 0.97, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] and the correct digit 7
The predicted digit is 8 with the class probabilities [0.0, 0.0, 0.02, 0.3, 0.0, 0.0, 0.0, 0.0, 0.68, 0.0] and the correct digit 8
The predicted digit is 9 with the class probabilities [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0] and the correct digit 9
